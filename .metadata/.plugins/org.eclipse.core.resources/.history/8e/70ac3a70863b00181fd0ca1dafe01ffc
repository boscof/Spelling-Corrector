import java.io.File;
import java.util.Scanner;

public class NgramDist {
	private static final int TOTAL_WORDS = 716;
	private static final int DICTIONARY_SIZE = 500000;
	private static final int DEFAULT_N = 2;
	
	public static void main(String[] args) {
	
		int size_of_dict = 0;
		int misspelt_count = 0;
		int correct_count = 0;
		double dist;
		
		String misspelt[] = new String[TOTAL_WORDS];
		String corrected[] = new String[TOTAL_WORDS];
		String dict[] = new String[DICTIONARY_SIZE];
		String dict_ngrams[][] = new String[DICTIONARY_SIZE][DEFAULT_N];
		String matched[][] = new String[TOTAL_WORDS][TOTAL_WORDS];
		
		/*try {
			System.setOut(new PrintStream(new FileOutputStream("src/output.txt")));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		*/
		
		try {
			File misspell = new File("src/misspell.txt");
			Scanner input = new Scanner(misspell);
			
			while (input.hasNextLine()) {
				misspelt[misspelt_count] = input.nextLine();
				misspelt_count++;
			}
			input.close();
			
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		try {
			File correct = new File("src/correct.txt");
			Scanner input = new Scanner(correct);
			
			while (input.hasNextLine()) {
				corrected[correct_count] = input.nextLine();
				correct_count++;
			}
			input.close();
			
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		try {
			File dictionary = new File("src/dictionary.txt");
			Scanner input = new Scanner(dictionary);
			
			while (input.hasNextLine()) {
				dict[size_of_dict] = input.nextLine();
				size_of_dict++;
			}
			input.close();
			
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		int n = DEFAULT_N;
		int i = 0;
		while(dict[i] != null) {
			for (int j = 0; j < n; j++)
			dict_ngrams[i][j] = dict[i]
		}
		
		long startTime = System.currentTimeMillis(); //start timer
		long stopTime = System.currentTimeMillis(); //stop timer
		long elapsedTime = stopTime - startTime; //record time taken
	}
}